/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _CLAVES_H_RPCGEN
#define _CLAVES_H_RPCGEN

#include <rpc/rpc.h>

#include <pthread.h>

#ifdef __cplusplus
extern "C" {
#endif

#define MAX_STRING 255
#define MAX_VECTOR 32

struct Coord {
	int x;
	int y;
};
typedef struct Coord Coord;

struct request {
	int key;
	char *value1;
	int N_value2;
	double value2[MAX_VECTOR];
	struct Coord value3;
};
typedef struct request request;

struct res_vector2 {
	u_int value2_len;
	double *value2_val;
};
typedef struct res_vector2 res_vector2;

struct get_response {
	int result;
	char *value1;
	struct res_vector2 value2;
	struct Coord value3;
};
typedef struct get_response get_response;

#define CLAVES_PROG 99
#define CLAVES_VERS 1

#if defined(__STDC__) || defined(__cplusplus)
#define SET_VALUE 1
extern  enum clnt_stat set_value_1(request , int *, CLIENT *);
extern  bool_t set_value_1_svc(request , int *, struct svc_req *);
#define GET_VALUE 2
extern  enum clnt_stat get_value_1(int , get_response *, CLIENT *);
extern  bool_t get_value_1_svc(int , get_response *, struct svc_req *);
#define MODIFY_VALUE 3
extern  enum clnt_stat modify_value_1(request , int *, CLIENT *);
extern  bool_t modify_value_1_svc(request , int *, struct svc_req *);
#define DELETE_KEY 4
extern  enum clnt_stat delete_key_1(int , int *, CLIENT *);
extern  bool_t delete_key_1_svc(int , int *, struct svc_req *);
#define EXIST 5
extern  enum clnt_stat exist_1(int , int *, CLIENT *);
extern  bool_t exist_1_svc(int , int *, struct svc_req *);
#define DESTROY 6
extern  enum clnt_stat destroy_1(int *, CLIENT *);
extern  bool_t destroy_1_svc(int *, struct svc_req *);
extern int claves_prog_1_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define SET_VALUE 1
extern  enum clnt_stat set_value_1();
extern  bool_t set_value_1_svc();
#define GET_VALUE 2
extern  enum clnt_stat get_value_1();
extern  bool_t get_value_1_svc();
#define MODIFY_VALUE 3
extern  enum clnt_stat modify_value_1();
extern  bool_t modify_value_1_svc();
#define DELETE_KEY 4
extern  enum clnt_stat delete_key_1();
extern  bool_t delete_key_1_svc();
#define EXIST 5
extern  enum clnt_stat exist_1();
extern  bool_t exist_1_svc();
#define DESTROY 6
extern  enum clnt_stat destroy_1();
extern  bool_t destroy_1_svc();
extern int claves_prog_1_freeresult ();
#endif /* K&R C */

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_Coord (XDR *, Coord*);
extern  bool_t xdr_request (XDR *, request*);
extern  bool_t xdr_res_vector2 (XDR *, res_vector2*);
extern  bool_t xdr_get_response (XDR *, get_response*);

#else /* K&R C */
extern bool_t xdr_Coord ();
extern bool_t xdr_request ();
extern bool_t xdr_res_vector2 ();
extern bool_t xdr_get_response ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_CLAVES_H_RPCGEN */
