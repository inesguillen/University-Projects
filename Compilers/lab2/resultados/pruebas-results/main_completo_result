(defun main()
    (setq main_x 5)(setq main_y 2)(setq main_z 0)
    (setq main_v (make-array 10))
    (setf (aref main_v 0) (+ main_x main_y))
    (setf main_z (* (aref main_v 0) 2))
    (print "Valores iniciales:")
    (princ main_x) 
    (princ main_y) 
    (princ main_z) 
    (if (> main_z 10)
        (progn (print "Z es mayor que 10")
            (setf main_z (/ main_z 2))
        )
        (progn (print "Z es menor o igual a 10")
            (setf main_z (* main_z 3))
    ))
    (setf main_x 0)
    (loop while (< main_x 5) do
        (setf (aref main_v main_x) (* main_x 2))
        (princ (aref main_v main_x)) 
        (setf main_x (+ main_x 1))
    )
    (loop while (< main_y 10) do
        (setf main_z (+ main_z 1))
    )
    (return-from main main_z)
)

