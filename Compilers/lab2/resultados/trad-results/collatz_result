(defun collatz (collatz_n collatz_cont)
    (setq collatz_retorno 0)
    (princ collatz_n) (princ " ") 
    (if (= collatz_n 1)
        (progn (setf collatz_retorno collatz_cont)
        )
        (progn (if (= (mod collatz_n 2) 0)
                (progn (setf collatz_retorno (collatz  (/ collatz_n 2) (+ collatz_cont 1)))
                )
                (progn (setf collatz_retorno (collatz  (+ (* 3 collatz_n) 1) (+ collatz_cont 1)))
            ))
    ))
    (return-from collatz collatz_retorno)
)

(defun main()
    (setq main_resultado 0)
    (setq main_i 0)
    (print "Sucesion de Collatz")
    (setf main_i 2)
    (loop while (< main_i 100) do
        (setf main_resultado (collatz  main_i 0))
        (princ main_i) (princ " ") (princ main_resultado) 
        (print " ")
        (setf main_i (+ main_i 1))
    )
)

 (main)
